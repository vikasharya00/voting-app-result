pipeline{
    agent any
    environment{
        registry="vikasharya000/result" 
        dockerImage=""  
        dockertoken=credentials("docker-token")
    }
    stages{
        stage('Building our image') { 
            steps { 
                script { 
                    dockerImage = docker.build registry 
                }
            } 
        }
        stage('Deploy our image') { 
            steps { 
                script { 
                    docker.withRegistry( '', "dockerhub-creds" ) { 
                        dockerImage.push("${BUILD_NUMBER}") 
                        dockerImage.push("latest")
                    }
                } 
            }
        }
        stage('Package helm chart and push') {
            steps{
                timeout(time: 30, unit: "SECONDS") {

                    input message: 'approve the helm push?', ok: 'Yes'

                }
                script{
                    sh """
                    minor_version=\$(grep 'version:' ./chart/result/Chart.yaml | awk -F '.' '{print \$2}')
                    new_minor_version=`expr \$minor_version + 1`
                    cp ./chart/result/Chart.yaml chart.yaml.tmp && sed "/^\\([[:space:]]*version: \\).*/s//\\10.\${new_minor_version}.0/" < chart.yaml.tmp >./chart/result/Chart.yaml && rm -f chart.yaml.tmp
                    echo \${dockertoken} | helm registry login registry-1.docker.io -u vikasharya000 --password-stdin
                    helm package ./chart/result/
                    helm push helm_result-0.\${new_minor_version}.0.tgz oci://registry-1.docker.io/vikasharya000
                    """
                }
                timeout(time: 30, unit: "SECONDS") {

                    input message: 'approve parent chart build', ok: 'Yes'
                }
                build job: "voting-app-chart", wait: true
            }
        }
    }
}